// Generated by Dagger (https://google.github.io/dagger).
package com.me.cl.template.presentation.repos;

import com.me.cl.template.framework.data.local.room.dao.UserDao;
import dagger.internal.Factory;
import javax.inject.Provider;

public final class LoginRepository_Factory implements Factory<LoginRepository> {
  private final Provider<UserDao> userDaoProvider;

  public LoginRepository_Factory(Provider<UserDao> userDaoProvider) {
    this.userDaoProvider = userDaoProvider;
  }

  @Override
  public LoginRepository get() {
    return provideInstance(userDaoProvider);
  }

  public static LoginRepository provideInstance(Provider<UserDao> userDaoProvider) {
    return new LoginRepository(userDaoProvider.get());
  }

  public static LoginRepository_Factory create(Provider<UserDao> userDaoProvider) {
    return new LoginRepository_Factory(userDaoProvider);
  }

  public static LoginRepository newLoginRepository(UserDao userDao) {
    return new LoginRepository(userDao);
  }
}
