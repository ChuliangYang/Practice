// Generated by Dagger (https://google.github.io/dagger).
package com.me.cl.template.presentation.viewmodel;

import com.me.cl.template.presentation.repos.LoginRepository;
import dagger.internal.Factory;
import javax.inject.Provider;

public final class LoginViewModel_Factory implements Factory<LoginViewModel> {
  private final Provider<LoginRepository> loginRepositoryProvider;

  public LoginViewModel_Factory(Provider<LoginRepository> loginRepositoryProvider) {
    this.loginRepositoryProvider = loginRepositoryProvider;
  }

  @Override
  public LoginViewModel get() {
    return provideInstance(loginRepositoryProvider);
  }

  public static LoginViewModel provideInstance(Provider<LoginRepository> loginRepositoryProvider) {
    return new LoginViewModel(loginRepositoryProvider.get());
  }

  public static LoginViewModel_Factory create(Provider<LoginRepository> loginRepositoryProvider) {
    return new LoginViewModel_Factory(loginRepositoryProvider);
  }

  public static LoginViewModel newLoginViewModel(LoginRepository loginRepository) {
    return new LoginViewModel(loginRepository);
  }
}
